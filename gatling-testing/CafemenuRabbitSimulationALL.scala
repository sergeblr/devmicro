
import scala.concurrent.duration._
import scala.util.Random

import io.gatling.core.Predef._
import io.gatling.http.Predef._
import io.gatling.jdbc.Predef._

class CafemenuRabbitSim extends Simulation {

        var randomStr = Iterator.continually(Map("randstr" -> ( Random.alphanumeric.take(5).mkString )))


	val httpProtocol = http
		.baseUrl("http://127.0.0.1:8090")
		.inferHtmlResources()
		.acceptHeader("text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9")
		.acceptEncodingHeader("gzip, deflate")
		.acceptLanguageHeader("ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7")
		.userAgentHeader("Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/79.0.3945.79 Chrome/79.0.3945.79 Safari/537.36")

	val headers_0 = Map(
		"Proxy-Connection" -> "keep-alive",
		"Upgrade-Insecure-Requests" -> "1")

	val headers_2 = Map(
		"Accept" -> "*/*",
		"Proxy-Connection" -> "keep-alive")

	val headers_6 = Map(
		"Origin" -> "http://127.0.0.1:8090",
		"Proxy-Connection" -> "keep-alive",
		"Upgrade-Insecure-Requests" -> "1")



	val scn = scenario("CafemenuRabbitSimulationALL")
		.exec(http("request_0")
			.get("/mainpage")
			.headers(headers_0))
		.pause(1)
		.exec(http("request_1")
			.get("/ordersdto")
			.headers(headers_0)
			.resources(http("request_2")
			.get("/js/bootstrap-datetimepicker.min.js")
			.headers(headers_2),
            http("request_3")
			.get("/js/moment.min.js")
			.headers(headers_2)))
		.pause(6)
		.exec(http("request_4")
			.get("/items")
			.headers(headers_0))
		.pause(4)
		.exec(http("request_5")
			.get("/item")
			.headers(headers_0))
		.pause(14)
		.exec(http("request_6")
			.post("/item")
			.headers(headers_6)
			.formParam("itemId", "")
			.formParam("itemName", "Item_")
			.formParam("itemPrice", "234.22"))
		.pause(3)
		.exec(http("request_7")
			.get("/item")
			.headers(headers_0))
		.pause(4)
		.exec(http("request_8")
			.post("/item")
			.headers(headers_6)
			.formParam("itemId", "")
			.formParam("itemName", "Burger")
			.formParam("itemPrice", "7.77"))
		.pause(1)
		.exec(http("request_9")
			.get("/items")
			.headers(headers_0))
		.pause(1)
		.exec(http("request_10")
			.get("/ordersdto")
			.headers(headers_0))
		.pause(2)
		.exec(http("request_11")
			.get("/order")
			.headers(headers_0))
		.pause(3)
		.exec(http("request_12")
			.post("/order")
			.headers(headers_6)
			.formParam("orderId", "")
			.formParam("orderEmployeeId", "99"))
		.pause(4)
		.exec(http("request_13")
			.post("/iteminorder")
			.headers(headers_6)
			.formParam("iioItemCount", "1")
			.formParam("iioOrderId", "172")
			.formParam("iioItemId", "3")
			.formParam("iioItemName", "French fried")
			.formParam("iioItemPrice", "3"))
		.pause(4)
		.exec(http("request_14")
			.post("/iteminorder")
			.headers(headers_6)
			.formParam("iioItemCount", "5")
			.formParam("iioOrderId", "172")
			.formParam("iioItemId", "7")
			.formParam("iioItemName", "GrillBurger")
			.formParam("iioItemPrice", "4"))
		.pause(4)
		.exec(http("request_15")
			.post("/iteminorder")
			.headers(headers_6)
			.formParam("iioItemCount", "1")
			.formParam("iioOrderId", "172")
			.formParam("iioItemId", "218")
			.formParam("iioItemName", "Vegetable Soup Nigella Xp")
			.formParam("iioItemPrice", "26"))
		.pause(4)
		.exec(http("request_16")
			.post("/iteminorder")
			.headers(headers_6)
			.formParam("iioItemCount", "1")
			.formParam("iioOrderId", "172")
			.formParam("iioItemId", "240")
			.formParam("iioItemName", "Pasta and Beans Mixed Spice Fv")
			.formParam("iioItemPrice", "39"))
		.pause(4)
		.exec(http("request_17")
			.post("/iteminorder")
			.headers(headers_6)
			.formParam("iioItemCount", "3")
			.formParam("iioOrderId", "172")
			.formParam("iioItemId", "3")
			.formParam("iioItemName", "French fried")
			.formParam("iioItemPrice", "3"))
		.pause(7)
		.exec(http("request_18")
			.post("/iteminorder")
			.headers(headers_6)
			.formParam("iioItemCount", "17")
			.formParam("iioOrderId", "172")
			.formParam("iioItemId", "209")
			.formParam("iioItemName", "Pizza Cardamom Whole Nu")
			.formParam("iioItemPrice", "68"))
		.pause(1)
		.exec(http("request_19")
			.post("/order/172")
			.headers(headers_6)
			.formParam("orderId", "172")
			.formParam("orderEmployeeId", "99"))
		.pause(4)
		.exec(http("request_20")
			.get("/ordersdto")
			.headers(headers_0))

	setUp(scn.inject(atOnceUsers(1))).protocols(httpProtocol)
}
